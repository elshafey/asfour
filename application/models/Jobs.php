<?php

/**
 * Jobs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Jobs extends BaseJobs{
    var $CI;

    public function __construct($table = null, $isNewEntry = false) {
        parent::__construct($table, $isNewEntry);
        $this->CI = get_instance();
    }

    public function processForm() {
        if ($_POST && $this->validateForm()) {
            $this->job_code = $_POST['job_code'];
            $this->job_order = $_POST['job_order'];
            $this->job_is_active = $_POST['job_is_active'];
            $this->save();
            
            foreach (get_lang_list() as $key => $lang) {
                $language = LanguagesTable::getLanguage($key);
                $jobDetails = JobDetailsTable::getInstance()
                        ->findBySql('job_id =? AND lang_id=?', array($this->job_id,$language['lang_id']));
                $jobDetail=$jobDetails[0];
                $jobDetail->job_id = $this->job_id;
                $jobDetail->job_title = $_POST['job_title_' . $key];
                $jobDetail->job_location = $_POST['job_location_' . $key];
                $jobDetail->job_description = $_POST['job_description_' . $key];
                $jobDetail->lang_id = $language['lang_id'];
                $jobDetail->save();
            }
            save_url(URL_PREFIX_CAREER.$this->job_id);
            return true;
        }

        return FALSE;
    }

    private function validateForm() {

        $this->CI->form_validation->set_error_delimiters('<span class="frm_error_msg">', '</span>');
        foreach (get_lang_list() as $key => $lang) {
            $this->CI->form_validation->set_rules("job_title_$key", "", "required|xss_clean");
            $this->CI->form_validation->set_rules("job_location_$key", "", "required|xss_clean");
            $this->CI->form_validation->set_rules("job_description_$key", "", "required");
        }
        if($this->job_id){
            validte_url(URL_PREFIX_CAREER.$this->job_id);
        }else{
            validte_url();
        }
        $this->CI->form_validation->set_rules("job_code", "", "required|xss_clean");
        $this->CI->form_validation->set_rules("job_order", "", "required|numeric|xss_clean");
        $this->CI->form_validation->set_rules("job_is_active", "", "xss_clean");

        return $this->CI->form_validation->run();
    }

    public function populateForm() {
        if (!$_POST) {
            foreach (get_lang_list() as $key => $lang) {
                $language = LanguagesTable::getLanguage($key);
                $jobDetail = JobDetailsTable::getInstance()
                        ->findBySql('job_id =? AND lang_id=?', array($this->job_id,$language['lang_id']));
//                ProductDetailsTable::getProductDetail($this->job_id, $key);
                
                $_POST["job_title_$key"] = $jobDetail[0]['job_title'];
                $_POST["job_location_$key"] = $jobDetail[0]['job_location'];
                $_POST["job_description_$key"] = $jobDetail[0]['job_description'];
            }
            $_POST["job_code"] = $this->job_code;
            $_POST["job_order"] = $this->job_order;
            $_POST["job_is_active"] = $this->job_is_active;
            populate_url(URL_PREFIX_CAREER.$this->job_id);
            $this->CI->process_form = false;
            $this->validateForm();
        }
    }
    
    public function delete(Doctrine_Connection $conn = null) {
        parent::delete($conn);
        delete_url(URL_PREFIX_CAREER.$this->job_id);
    }
}