<?php

/**
 * Articles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Articles extends BaseArticles
{
    var $CI;

    public function __construct($table = null, $isNewEntry = false) {
        parent::__construct($table, $isNewEntry);
        $this->CI = get_instance();
    }

    public function processForm() {
        if ($_POST && $this->validateForm()) {
            $this->news_is_active = $_POST['news_is_active'];
            if(!$this->news_id)
                $this->news_created_at=  $_POST['news_created_at'];          
                
            $this->save();
            save_url(URL_PREFIX_NEWS.$this->news_id);
            foreach (get_lang_list() as $key => $lang) {
                $language = LanguagesTable::getLanguage($key);
                $newsDetails = NewsDetailsTable::getInstance()
                        ->findBySql('news_id =? AND lang_id=?', array($this->news_id, $language['lang_id']));
                
                $newsDetail = $newsDetails[0];
                $newsDetail->news_id = $this->news_id;
                $newsDetail->news_title = $_POST['news_title_' . $key];
                $newsDetail->news_type = $_POST['news_type'];
                $newsDetail->news_description = $_POST['news_description_' . $key];
                $newsDetail->lang_id = $language['lang_id'];
                $newsDetail->save();
            }

            return true;
        }

        return FALSE;
    }

    private function validateForm() {

        $this->CI->form_validation->set_error_delimiters('<span class="frm_error_msg">', '</span>');
        foreach (get_lang_list() as $key => $lang) {
            $this->CI->form_validation->set_rules("news_title_$key", "", "required|xss_clean");
            $this->CI->form_validation->set_rules("news_description_$key", "", "required");
        }
        if($this->news_id){
            validte_url(URL_PREFIX_NEWS.$this->news_id);
        }else{
            validte_url();
        }
        $this->CI->form_validation->set_rules("news_is_active", "", "xss_clean");
        $this->CI->form_validation->set_rules("news_type", "", "xss_clean");
        $this->CI->form_validation->set_rules("news_created_at", "", "required|xss_clean");

        return $this->CI->form_validation->run();
    }

    public function populateForm() {
        if (!$_POST) {
            foreach (get_lang_list() as $key => $lang) {
                $language = LanguagesTable::getLanguage($key);
                $newsDetail = NewsDetailsTable::getInstance()->
                        findBySql(
                        'news_id =? AND lang_id=?', array($this->news_id,
                    $language['lang_id']), Doctrine_Core::HYDRATE_ARRAY);

                $_POST["news_title_$key"] = $newsDetail[0]['news_title'];
                $_POST["news_description_$key"] = $newsDetail[0]['news_description'];
            }
            populate_url(URL_PREFIX_NEWS.$this->news_id);
            $_POST["news_is_active"] = $this->news_is_active;
            $_POST["news_created_at"] = substr($this->news_created_at,0,10);
            $_POST["news_type"] = $newsDetail[0]['news_type'];
            $this->CI->process_form = false;
            $this->validateForm();
        }
    }
    
    function delete(Doctrine_Connection $conn = null) {
        parent::delete($conn);
        delete_url(URL_PREFIX_NEWS.$this->news_id);
    }
}