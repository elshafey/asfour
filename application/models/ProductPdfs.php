<?php

/**
 * ProductPdfs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ProductPdfs extends BaseProductPdfs
{
    var $CI;

    public function __construct($table = null, $isNewEntry = false) {
        parent::__construct($table, $isNewEntry);
        $this->CI = get_instance();
    }
    
    public function processForm($prod_id) {
        if ($_POST && $this->validateForm()) {
            $this->pdf_order = $_POST['pdf_order'];
            $this->pdf_is_active = $_POST['pdf_is_active'];
            $this->prod_id=$prod_id;
            if(isset($_POST['tab_id'])&&$_POST['tab_id']){
                $this->tab_id=$_POST['tab_id'];
            }else{
                $this->tab_id=NULL;
            }
            $this->pdf_path=$_POST['pdf_path'];
            $this->save();
            
            foreach (get_lang_list() as $key => $lang) {
                $language = LanguagesTable::getLanguage($key);
                $pdfDetails = PdfDetailsTable::getInstance()
                        ->findBySql('pdf_id =? AND lang_id=?', array($this->pdf_id,$language['lang_id']));
                
                $pdfDetail=$pdfDetails[0];
                $pdfDetail->pdf_id = $this->pdf_id;
                $pdfDetail->pdf_title = $_POST['pdf_title_' . $key];
                $pdfDetail->lang_id = $language['lang_id'];
                $pdfDetail->save();
            }
            
            return true;
        }

        return FALSE;
    }
    
    private function validateForm() {

        $this->CI->form_validation->set_error_delimiters('<span class="frm_error_msg">', '</span>');
        foreach (get_lang_list() as $key => $lang) {
            $this->CI->form_validation->set_rules("pdf_title_$key", "", "required|xss_clean");
        }

        $this->CI->form_validation->set_rules("pdf_path", "", "required|xss_clean");
        $this->CI->form_validation->set_rules("tab_id", "", "xss_clean");
        $this->CI->form_validation->set_rules("pdf_order", "", "required|numeric|xss_clean");
        $this->CI->form_validation->set_rules("pdf_is_active", "", "xss_clean");

        return $this->CI->form_validation->run();
    }
    
    
    public function populateForm() {
        if (!$_POST) {
            foreach (get_lang_list() as $key => $lang) {
                $language = LanguagesTable::getLanguage($key);
                $pdfDetail = PdfDetailsTable::getInstance()->
                        findBySql(
                                'pdf_id =? AND lang_id=?', array($this->pdf_id,
                                $language['lang_id']),
                                Doctrine_Core::HYDRATE_ARRAY);
                
                $_POST["pdf_title_$key"] = $pdfDetail[0]['pdf_title'];
            }
            
            $_POST["pdf_path"] = $this->pdf_path;
            $_POST["tab_id"] = $this->tab_id;
            $_POST["pdf_order"] = $this->pdf_order;
            $_POST["pdf_is_active"] = $this->pdf_is_active;
            $this->CI->process_form = false;
            $this->validateForm();
        }
    }
}